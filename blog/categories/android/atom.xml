<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：android | 折迹的博客]]></title>
  <link href="http://bylu.me/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://bylu.me/"/>
  <updated>2016-06-23T17:28:45+08:00</updated>
  <id>http://bylu.me/</id>
  <author>
    <name><![CDATA[白 禄]]></name>
    <email><![CDATA[ruanjianbai@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于SSH KEY 以及管理多个 SSH KEY]]></title>
    <link href="http://bylu.me/blog/2016/06/21/guan-li-duo-ge-ssh-key/"/>
    <updated>2016-06-21T17:01:18+08:00</updated>
    <id>http://bylu.me/blog/2016/06/21/guan-li-duo-ge-ssh-key</id>
    <content type="html"><![CDATA[<h2>关于SSH KEY</h2>

<p>通常我们使用 SSH 协议来访问 Git 仓库，获得所有仓库的读写权限，这样每次操作都不需要再输入账号和密码了。</p>

<p>关于SSH协议可参考中文维基百科 (<a href="http://zh.wikipedia.org/zh/Secure_Shell">http://zh.wikipedia.org/zh/Secure_Shell</a>)</p>

<p>目前主流的代码托管平台，比如Github，是一个仓库可以有多个公钥，但一个公钥只能认证一个用户，但一个用户可以拥有多个公钥。</p>

<h3>生成SSH KEY</h3>

<p>打开终端，输入ssh-keygen -t rsa -C “username@example.com”,( 注册的邮箱)，接下来点击enter键即可（也可以输入密码）</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  ~ ssh-keygen -t rsa -C &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#x62;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#117;&amp;#x40;&amp;#x64;&amp;#111;&amp;#x75;&amp;#x6d;&amp;#111;&amp;#x62;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#98;&amp;#97;&amp;#105;&amp;#x6c;&amp;#x75;&amp;#64;&amp;#100;&amp;#x6f;&amp;#x75;&amp;#109;&amp;#111;&amp;#98;&amp;#46;&amp;#x63;&amp;#x6f;&amp;#109;&lt;/a&gt;</span>
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/Users/bailu/.ssh/id_rsa<span class="o">)</span>:
</span><span class='line'>/Users/bailu/.ssh/id_rsa_codingnet
</span></code></pre></td></tr></table></div></figure></p>

<p>成功之后
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Your identification has been saved in /Users/bailu/.ssh/id_rsa_codingnet.
</span><span class='line'>Your public key has been saved in /Users/bailu/.ssh/id_rsa_codingnet.pub.
</span><span class='line'>The key fingerprint is:
</span><span class='line'>SHA256:NB+nvyQErZft02UwWmDl5foQrdDye70qHNmP0NxRPjU &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#109;&amp;#x61;&amp;#x69;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#x62;&amp;#x61;&amp;#105;&amp;#x6c;&amp;#x75;&amp;#64;&amp;#x64;&amp;#x6f;&amp;#117;&amp;#109;&amp;#x6f;&amp;#x62;&amp;#x2e;&amp;#x63;&amp;#111;&amp;#x6d;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#98;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#117;&amp;#x40;&amp;#100;&amp;#111;&amp;#x75;&amp;#x6d;&amp;#x6f;&amp;#x62;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>注意：<code>/Users/bailu/.ssh/id_rsa_codingnet</code>为设定的私钥文件路径和名称，<code>id_rsa_codingnet.pub</code>为公钥，文件名称根据不同代码托管平台起不同的名称，已示区分，可以管理多个KEY</p>

<p>然后
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.ssh
</span><span class='line'>cat id_rsa.pub
</span></code></pre></td></tr></table></div></figure></p>

<!--more-->


<h3>添加公钥</h3>

<p>复制公钥内容粘贴到托管平台账户的SSH公钥设置页面</p>

<h3>测试</h3>

<p>SSH KEY 公钥添加成功后，输入
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  ~ ssh -T &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#x3a;&amp;#x67;&amp;#105;&amp;#116;&amp;#64;&amp;#x67;&amp;#x69;&amp;#116;&amp;#46;&amp;#99;&amp;#111;&amp;#100;&amp;#x69;&amp;#x6e;&amp;#x67;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#x74;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#x67;&amp;#x69;&amp;#x74;&amp;#64;&amp;#x67;&amp;#105;&amp;#x74;&amp;#46;&amp;#x63;&amp;#111;&amp;#100;&amp;#x69;&amp;#x6e;&amp;#x67;&amp;#x2e;&amp;#110;&amp;#101;&amp;#116;&lt;/a&gt;</span>
</span><span class='line'>Warning: Permanently added the RSA host key <span class="k">for</span> IP address <span class="p">&amp;</span>lsquo<span class="p">;</span>59.56.27.71<span class="p">&amp;</span>rsquo<span class="p">;</span> to the list of known hosts.
</span><span class='line'>Hello doumob You<span class="p">&amp;</span>rsquo<span class="p">;</span>ve connected to Coding.net by SSH successfully!
</span></code></pre></td></tr></table></div></figure></p>

<h2>管理多个 SSH KEY</h2>

<p>当之前已经有了向github提交的SSH Key，则测试不成功</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>➜  ~ ssh -T &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#x6c;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#103;&amp;#105;&amp;#116;&amp;#x40;&amp;#103;&amp;#x69;&amp;#116;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#x64;&amp;#105;&amp;#110;&amp;#x67;&amp;#x2e;&amp;#110;&amp;#x65;&amp;#116;&quot;</span>&gt;<span class="p">&amp;</span><span class="c">#103;&amp;#x69;&amp;#x74;&amp;#64;&amp;#x67;&amp;#105;&amp;#x74;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#100;&amp;#105;&amp;#x6e;&amp;#103;&amp;#46;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;</span>
</span><span class='line'>The authenticity of host <span class="p">&amp;</span>lsquo<span class="p">;</span>git.coding.net <span class="o">(</span>14.215.101.70<span class="o">)</span><span class="p">&amp;</span>rsquo<span class="p">;</span> can<span class="p">&amp;</span>rsquo<span class="p">;</span>t be established.
</span><span class='line'>RSA key fingerprint is SHA256:jok3FH7q5LJ6qvE7iPNehBgXRw51ErE77S0Dn+Vg/Ik.
</span><span class='line'>Are you sure you want to <span class="k">continue</span> connecting <span class="o">(</span>yes/no<span class="o">)</span>? yes
</span><span class='line'>Warning: Permanently added <span class="p">&amp;</span>lsquo<span class="p">;</span>git.coding.net,14.215.101.70<span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="o">(</span>RSA<span class="o">)</span> to the list of known hosts.
</span><span class='line'>Permission denied <span class="o">(</span>publickey<span class="o">)</span>.
</span></code></pre></td></tr></table></div></figure></p>

<p>这时候需要修改配置文件
在 ~/.ssh 目录下新建一个config文件
添加内容：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># codingnet 
</span><span class='line'>Host git.coding.net
</span><span class='line'>HostName git.coding.net
</span><span class='line'>User &lt;a href="&#109;&#97;&#x69;&#108;&#x74;&#111;&#x3a;&#98;&#x61;&#105;&#108;&#x75;&#x40;&#100;&#111;&#117;&#109;&#x6f;&#98;&#46;&#99;&#x6f;&#x6d;">&#x62;&#x61;&#105;&#x6c;&#x75;&#64;&#x64;&#x6f;&#117;&#109;&#x6f;&#x62;&#x2e;&#x63;&#111;&#x6d;&lt;/a>
</span><span class='line'>PreferredAuthentications publickey
</span><span class='line'>IdentityFile ~/.ssh/id_rsa_codingnet&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p># github 
</span><span class='line'>Host github.com
</span><span class='line'>HostName github.com
</span><span class='line'>User &lt;a href="&#x6d;&#97;&#105;&#108;&#x74;&#111;&#58;&#114;&#x75;&#x61;&#110;&#x6a;&#x69;&#97;&#110;&#98;&#x61;&#105;&#64;&#x67;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;">&#x72;&#117;&#97;&#110;&#106;&#105;&#97;&#110;&#x62;&#97;&#105;&#64;&#x67;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;&lt;/a>
</span><span class='line'>PreferredAuthentications publickey
</span><span class='line'>IdentityFile ~/.ssh/id_rsa</span></code></pre></td></tr></table></div></figure></p>

<p>再测试，则成功！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 网络判断]]></title>
    <link href="http://bylu.me/blog/2015/06/12/android-wang-luo-pan-duan/"/>
    <updated>2015-06-12T16:51:05+08:00</updated>
    <id>http://bylu.me/blog/2015/06/12/android-wang-luo-pan-duan</id>
    <content type="html"><![CDATA[<p>总结一下在 Android 中常用的网络判断代码。</p>

<p>判断是否有网代码如下：
{% codeblock lang:java  %}
public static boolean isNetworkAvailable(Context context) {
    ConnectivityManager mConnectivityManager = (ConnectivityManager)  <br/>
    context.getSystemService(Context.CONNECTIVITY_SERVICE);
    //这行代码需要权限android.permission.ACCESS_NETWORK_STATE
    //如果没有连接网络就会返回null
    NetworkInfo activeNetworkInfo = mConnectivityManager.getActiveNetworkInfo();
    if (activeNetworkInfo!=null) {
        //即使网络连接着，也可能没有网
        return activeNetworkInfo.isAvailable();
    }
    //没有网络连接
    return false;
}
{% endcodeblock %}</p>

<!--more-->


<p>网络类型：
{% codeblock lang:java %}
public static final String NETWORK_TYPE_WIFI = &ldquo;wifi&rdquo;;
public static final String NETWORK_TYPE_2G = &ldquo;2G&rdquo;;
public static final String NETWORK_TYPE_3G = &ldquo;3G&rdquo;;
public static final String NETWORK_TYPE_4G = &ldquo;4G&rdquo;;
public static final String NETWORK_TYPE_UNKNOWN = &ldquo;unknown&rdquo;;
{% endcodeblock %}</p>

<p>判断当前网络类型：
{% codeblock lang:java %}
public static String getNetworkType(Context context){
    ConnectivityManager mConnectivityManager = (ConnectivityManager)<br/>
    context.getSystemService(Context.CONNECTIVITY_SERVICE);
    NetworkInfo activeNetworkInfo = mConnectivityManager.getActiveNetworkInfo();
    if(activeNetworkInfo==null){
        return NETWORK_TYPE_UNKNOWN;
    }
    //首先判断当前网络是WIFI连接还是MOBILE连接
    if (ConnectivityManager.TYPE_WIFI == activeNetworkInfo.getType()){
        return NETWORK_TYPE_WIFI;
    }else {
        return getNetworkClass(activeNetworkInfo.getSubtype());
    }</p>

<p>}</p>

<p>private static String getNetworkClass(int networkType) {
    switch (networkType) {
        case TelephonyManager.NETWORK_TYPE_GPRS:
        case TelephonyManager.NETWORK_TYPE_EDGE:
        case TelephonyManager.NETWORK_TYPE_CDMA:
        case TelephonyManager.NETWORK_TYPE_1xRTT:
        case TelephonyManager.NETWORK_TYPE_IDEN:
            return NETWORK_TYPE_2G;
        case TelephonyManager.NETWORK_TYPE_UMTS:
        case TelephonyManager.NETWORK_TYPE_EVDO_0:
        case TelephonyManager.NETWORK_TYPE_EVDO_A:
        case TelephonyManager.NETWORK_TYPE_HSDPA:
        case TelephonyManager.NETWORK_TYPE_HSUPA:
        case TelephonyManager.NETWORK_TYPE_HSPA:
        case TelephonyManager.NETWORK_TYPE_EVDO_B:
        case TelephonyManager.NETWORK_TYPE_EHRPD:
        case TelephonyManager.NETWORK_TYPE_HSPAP:
            return NETWORK_TYPE_3G;
        case TelephonyManager.NETWORK_TYPE_LTE:
            return NETWORK_TYPE_4G;
        default:
            return NETWORK_TYPE_UNKNOWN;
    }
}
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
